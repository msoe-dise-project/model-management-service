---
version: '3'
services:
  db:
    image: docker.io/postgres:bullseye
    container_name: postgres
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 3s
      retries: 5
    restart: always
    ports:
      - "5432:5432"
    environment:
      POSTGRES_PASSWORD: "postgres"

  database-setup:
    build:
      context: ./database-setup
      no_cache: true
    image: database-setup
    container_name: database-setup
    restart: "no"
    depends_on:
      db:
        condition: service_healthy
    environment:
      POSTGRES_LOG_MIN_MESSAGES: warning
      POSTGRES_LOG_STATEMENT: none
      POSTGRES_HOST: "db"
      POSTGRES_USER_PASSWORD: "abadpassword"
      POSTGRES_ADMIN_PASSWORD: "postgres"

  model-management-service:
    build:
      context: ./
      no_cache: true
    image: model-management-service
    container_name: model-management-service
    restart: "no"
    healthcheck:
      test: curl http://model-management-service:8888/healthcheck || exit 1
      interval: 5s
      timeout: 3s
      retries: 5
    depends_on:
      db:
        condition: service_healthy
      database-setup:
        condition: service_completed_successfully
    ports:
      - "8888:8888"    
    environment:
      POSTGRES_HOST: "db"
      POSTGRES_USERNAME: "model_management_service"
      POSTGRES_PASSWORD: "abadpassword"
      FLASK_RUN_PORT: "8888"
      FLASK_RUN_HOST: "0.0.0.0"

  model-management-service-tests:
    build:
      context: ./tests
      no_cache: true
    image: model-management-service-tests
    container_name: model-management-service-tests
    restart: "no"
    depends_on:
      model-management-service:
        condition: service_healthy
    environment:
      BASE_URL: "http://model-management-service:8888"
